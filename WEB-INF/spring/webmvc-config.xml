<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans
xmlns:sec="http://www.springframework.org/schema/security"
xmlns:task="http://www.springframework.org/schema/task"
xmlns:int="http://www.springframework.org/schema/integration"
xmlns:int-ip="http://www.springframework.org/schema/integration/ip" 
xmlns="http://www.springframework.org/schema/beans" 
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:mvc="http://www.springframework.org/schema/mvc" 
xmlns:p="http://www.springframework.org/schema/p" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd 
http://www.springframework.org/schema/integration/ip http://www.springframework.org/schema/integration/ip/spring-integration-ip.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd                
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd                 
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"> 

	<sec:global-method-security pre-post-annotations="enabled"/>

	<task:annotation-driven executor="myExecutor" scheduler="myScheduler" />
	<task:executor id="myExecutor" pool-size="50" queue-capacity="100" />
	<task:scheduler id="myScheduler" pool-size="50" />
	
    <!-- The controllers are autodetected POJOs labeled with the @Controller annotation. -->
    <context:component-scan base-package="webapp, service, entities, auth" use-default-filters="false" >
        <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>
    
    <!-- Turns on support for mapping requests to Spring MVC @Controller methods
         Also registers default Formatters and Validators for use across all @Controllers -->
    <mvc:annotation-driven conversion-service="applicationConversionService" >
    	<mvc:message-converters>
    		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
            <property name="supportedMediaTypes">
                <list>
                    <value>text/plain;charset=UTF-8</value>
                    <value>text/html;charset=UTF-8</value>
                    <value>application/json;charset=UTF-8</value>
                </list>
            </property>
        	</bean>
    	</mvc:message-converters>
    </mvc:annotation-driven>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
    <mvc:resources order="1" location="/, classpath:/META-INF/web-resources/, /WEB-INF/design/static/" mapping="/resources/**"/>
	
    <!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource 
    requests to the container's default Servlet -->
    <mvc:default-servlet-handler/>

    <!-- Register "global" interceptor beans to apply to all registered HandlerMappings -->
    <mvc:interceptors>
        <!-- <bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor"/> -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="lang"/>
    </mvc:interceptors>

    <!-- Selects a static view for rendering without the need for an explicit controller -->
    <mvc:view-controller path="/login"/>
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/ip"/>
    <mvc:view-controller path="/uncaughtException"/>
    <mvc:view-controller path="/resourceNotFound"/>
    <mvc:view-controller path="/dataAccessFailure"/>

    <!-- Resolves localized messages*.properties and application.properties files in the application to allow for internationalization. 
    The messages*.properties files translate Roo generated messages which are part of the admin interface, the 
    application.properties resource bundle localizes all application specific messages such as entity names and menu items.-->
    <bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource" p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application" p:fallbackToSystemLocale="true" />
 	
    <!-- Store preferred language configuration in a cookie -->
    <bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver" id="localeResolver" p:cookieName="locale" p:defaultLocale="ru_RU"/>

    <!-- Resolves localized <theme_name>.properties files in the classpath to allow for theme support -->
    <bean class="org.springframework.ui.context.support.ResourceBundleThemeSource" id="themeSource"/>

    <!-- Store preferred theme configuration in a cookie -->
    <bean class="org.springframework.web.servlet.theme.CookieThemeResolver" id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard"/>

    <!-- This bean resolves specific types of exceptions to corresponding logical - view names for error views. 
    The default behaviour of DispatcherServlet - is to propagate all exceptions to the servlet 
    container: this will happen - here with all other types of exceptions. -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" p:defaultErrorView="uncaughtException">
        <property name="exceptionMappings">
            <props>
                <prop key=".DataAccessException">dataAccessFailure</prop>
                <prop key=".AccessDeniedException">dataAccessFailure</prop>
                <prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
                <prop key=".TypeMismatchException">resourceNotFound</prop>
                <prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
            </props>
        </property>
    </bean>

	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="viewResolver">
		<property name="order" value="0" />
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	    <property name="prefix" value="/WEB-INF/design/views/"/>
   		<property name="suffix" value=".jspx"/>
	</bean>

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	  <property name="order" value="1" />
	  <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json;charset=UTF-8"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
	  <property name="defaultViews">
		<list>
		  <!-- JSON View -->
		  <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"></bean>
		 </list>
	  </property>
	</bean>    
    <!-- Enable this for integration of file upload functionality -->
    <bean class="org.springframework.web.multipart.support.StandardServletMultipartResolver" id="multipartResolver"/>
    
    
	<bean class="webapp.mvc.ApplicationConversionServiceFactoryBean" id="applicationConversionService" name="mvcConversionService"/>

	<bean id="myProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	  <property name="location" value="classpath:app.properties"/>
	</bean>
	
	<bean id="webappService" class="webapp.util.WebappService">
		<property name="myProps" ref="myProps"/>
		<property name="mailSender" ref="mailSender"/>
	</bean>

   <bean id="recaptchaService" class="webapp.util.captcha.RecaptchaService">
   		<property name="url" value="https://www.google.com/recaptcha/api/siteverify"/>
   		<property name="key" value="xxx"/>
   		<property name="secret" value="xxx"/>
   </bean>
	<bean class="webapp.WebController" id="webController">
      <property name="mailSender" ref="mailSender"/>
   </bean>

	<bean id="applicationProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations">
	    	<list><value>classpath:application.properties</value></list>
	    </property>
	</bean>
   
   <bean id="springDocConfigProperties" class="org.springdoc.core.properties.SpringDocConfigProperties"/>
   <bean id="springDocConfiguration" class="org.springdoc.core.configuration.SpringDocConfiguration"/>
   <bean id="springDocSpecPropertiesConfiguration" class="org.springdoc.core.configuration.SpringDocSpecPropertiesConfiguration"/>
   <bean id="springDocUIConfiguration" class="org.springdoc.core.configuration.SpringDocUIConfiguration"/>
   <bean id="swaggerUiConfigParameters" class="org.springdoc.core.properties.SwaggerUiConfigParameters"/>
   <bean id="swaggerUiConfigProperties" class="org.springdoc.core.properties.SwaggerUiConfigProperties"/>
   <bean id="swaggerUiOAuthProperties" class="org.springdoc.core.properties.SwaggerUiOAuthProperties"/>
   <bean id="springDocWebMvcConfiguration" class="org.springdoc.webmvc.core.configuration.SpringDocWebMvcConfiguration"/>
   <bean id="openApiWebMvcResource" class="org.springdoc.webmvc.api.OpenApiWebMvcResource"/>
   
   <bean id="swaggerConfig" class="org.springdoc.webmvc.ui.SwaggerConfig"/>
   <bean id="swaggerWebMvcConfigurer" class="org.springdoc.webmvc.ui.SwaggerWebMvcConfigurer"/>
   <bean id="swaggerWelcomeWebMvc" class="org.springdoc.webmvc.ui.SwaggerWelcomeWebMvc"/>
   <bean id="swaggerConfigResource" class="org.springdoc.webmvc.ui.SwaggerConfigResource"/>
	<mvc:resources mapping="/swagger-ui/**" location="classpath:/META-INF/resources/webjars/swagger-ui/5.18.2/" />
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
</beans>
